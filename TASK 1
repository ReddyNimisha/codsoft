from tkinter import *
from tkinter import messagebox
import sqlite3 as sql


guiWindow = Tk()
guiWindow.title("To-Do List App")
guiWindow.geometry("400x400")


conn = sql.connect('tasks.db')
the_cursor = conn.cursor()


the_cursor.execute('''
    CREATE TABLE IF NOT EXISTS tasks (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        title TEXT NOT NULL
    )
''')
conn.commit()

tasks = []

def add_task():
    task_string = task_field.get()
    if len(task_string) == 0:
        messagebox.showinfo('Error', 'Field is Empty.')
    else:
        tasks.append(task_string)
        the_cursor.execute('INSERT INTO tasks (title) VALUES (?)', (task_string,))
        conn.commit()
        list_update()
        task_field.delete(0, 'end')

def list_update():
    clear_list()
    for task in tasks:
        task_listbox.insert('end', task)

def delete_task():
    try:
        the_value = task_listbox.get(task_listbox.curselection())
        if the_value in tasks:
            tasks.remove(the_value)
            list_update()
            the_cursor.execute('DELETE FROM tasks WHERE title = ?', (the_value,))
            conn.commit()
    except:
        messagebox.showinfo('Error', 'No Task Selected. Cannot Delete.')

def delete_all_tasks():
    message_box = messagebox.askyesno('Delete All', 'Are you sure?')
    if message_box:
        while len(tasks) != 0:
            tasks.pop()
        the_cursor.execute('DELETE FROM tasks')
        conn.commit()
        list_update()

def clear_list():
    task_listbox.delete(0, 'end')

def close():
    print(tasks)
    guiWindow.destroy()

def retrieve_database():
    while len(tasks) != 0:
        tasks.pop()
    for row in the_cursor.execute('SELECT title FROM tasks'):
        tasks.append(row[0])
    list_update()


task_field = Entry(guiWindow, width=20)
task_field.pack(pady=10)

add_task_btn = Button(guiWindow, text="Add Task", command=add_task)
add_task_btn.pack(pady=5)

del_task_btn = Button(guiWindow, text="Delete Task", command=delete_task)
del_task_btn.pack(pady=5)

del_all_btn = Button(guiWindow, text="Delete All Tasks", command=delete_all_tasks)
del_all_btn.pack(pady=5)

task_listbox = Listbox(guiWindow)
task_listbox.pack(pady=10)


retrieve_database()


guiWindow.protocol("WM_DELETE_WINDOW", close)
guiWindow.mainloop()


conn.close()
